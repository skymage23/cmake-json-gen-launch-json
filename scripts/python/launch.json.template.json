//Most of the schema here described is based on VS Code's
//schema for the launch.json file.

//Anything generic is to be a property of the generic object.
//All else is to be defined in objects dictating to which
//environments they apply.
{
    "language-specific":{
        "C++": {
            "languages": ["CPLUSPLUS"],
            "externalConsole": "",
            "logging": "",
            "visualizerFile": "",
            "showDisplayString": "",
            "args": "", //This is prog-specific. This needs to be collected from Python.,
            "cwd": "",
            "environment":[], //some progs may need to add more values.
           
            "coreDumpPath": "",
            "miDebuggerServerAddress":"",
            "debugServerPath": "",
            "debugServerArgs": "",
            "serverStarted": "",
            "filterStdout": "",
            "filterStderr": "",
            "serverLaunchTimeout": "",
            "pipeTransport": "",
            "hardwareBreakpoints": "",
            "processId": "vscode_default",
            "request": "launch",
            "sourceFileMap": "" //This needs to be handled in the target-specific files.

            //Hello:
            "os_specific": {
                "windows":{
                    "program": "",
                    "dumpPath": "",
                    "symbolSearchPath": "",
                    "requireExactSource": "",
                    "avoidWindowsConsoleRedirection":"",
                    "type": "cppvsdbg" //requirement in Windows.

                },
                "unix-like": {
                    "additionalSOLibSearchPath": "",
                    "MIMode": "",
                    "miDebuggerPath": "",
                    "miDebuggerArgs": "",
                    "stopAtEntry": "",
                    "stopAtConnect": "",
                    "setupCommands": [],
                    "customLaunchSetupCommands": [],
                    "launchCompleteCommand": "exec-run",
                    "symbolLoadInfo":"",
                    "type": "cppdbg"

                },

                "linux": {

                },
                "macos": {
                    ""
                }
            }//end os-specific
        }//end C++
    }//end language-specific
}//end main